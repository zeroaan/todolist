{"version":3,"sources":["components/Header.js","components/AddList.js","store/actions/todo.js","store/actions/types.js","components/DisplayListItem.js","components/DisplayList.js","App.js","store/reducers/index.js","store/reducers/todo.js","store/index.js","index.js"],"names":["Header","className","AddList","dispatch","useDispatch","useState","list","setList","onSubmit","e","preventDefault","type","text","placeholder","value","onChange","target","autoFocus","DisplayListItem","textItem","index","todo","useSelector","store","editing","setEditing","editText","setEditText","onClickEdit","onClickComplete","id","invisible","actions","onClick","complete","DisplayList","map","item","key","length","App","rootReducer","combineReducers","state","action","undefined","newTodo","i","applyMiddleware","PromiseMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.4c5112fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"todo__title\">To Do List</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../store/actions/todo\";\r\nimport \"./AddList.css\";\r\n\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const [list, setList] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (list !== \"\") {\r\n      dispatch(actions.addList(list));\r\n      setList(\"\");\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n    setList(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo__add\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          className=\"todo__add__text\"\r\n          type=\"text\"\r\n          placeholder=\"할 일 입력\"\r\n          value={list}\r\n          onChange={onChange}\r\n          autoFocus\r\n        />\r\n        <input className=\"todo__add__submit\" type=\"submit\" value=\"&#xf1d8;\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import * as types from \"../actions/types\";\r\n\r\nexport const addList = (text) => {\r\n  return {\r\n    type: types.ADD_LIST,\r\n    text: text,\r\n  };\r\n};\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: types.DELETE_LIST,\r\n    id: id,\r\n  };\r\n};\r\nexport const editList = (editText, id) => {\r\n  return {\r\n    type: types.EDIT_LIST,\r\n    id: id,\r\n    editText: editText,\r\n  };\r\n};\r\nexport const completeList = (id) => {\r\n  return {\r\n    type: types.COMPLETE_LIST,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const visibleAll = () => {\r\n  return {\r\n    type: types.VISIBLE_ALL,\r\n  };\r\n};\r\nexport const visibleActive = () => {\r\n  return {\r\n    type: types.VISIBLE_ACTIVE,\r\n  };\r\n};\r\nexport const visibleCompleted = () => {\r\n  return {\r\n    type: types.VISIBLE_COMPLETED,\r\n  };\r\n};\r\nexport const clearCompleted = () => {\r\n  return {\r\n    type: types.CLEAR_COMPLETED,\r\n  };\r\n};\r\n","export const ADD_LIST = \"add_list\";\r\nexport const DELETE_LIST = \"delete_list\";\r\nexport const EDIT_LIST = \"edit_list\";\r\nexport const COMPLETE_LIST = \"complete_list\";\r\n\r\nexport const VISIBLE_ALL = \"visible_all\";\r\nexport const VISIBLE_ACTIVE = \"visible_active\";\r\nexport const VISIBLE_COMPLETED = \"visible_completed\";\r\nexport const CLEAR_COMPLETED = \"clear_completed\";\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../store/actions/todo\";\r\nimport \"./DisplayListItem.css\";\r\n\r\nconst DisplayListItem = ({ textItem, index }) => {\r\n  const { todo } = useSelector((store) => store.todo);\r\n  const dispatch = useDispatch();\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [editText, setEditText] = useState(todo[index].text);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (editText !== \"\") {\r\n      dispatch(actions.editList(editText, index));\r\n      setEditing(!editing);\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n    setEditText(value);\r\n  };\r\n  const onClickEdit = () => {\r\n    setEditing(!editing);\r\n    setEditText(todo[index].text);\r\n  };\r\n  const onClickDelete = () => {\r\n    dispatch(actions.deleteList(index));\r\n  };\r\n  const onClickComplete = () => {\r\n    dispatch(actions.completeList(index));\r\n  };\r\n\r\n  return (\r\n    <div id={todo[index].invisible} className=\"item__box\">\r\n      {editing ? (\r\n        <>\r\n          <div className=\"todo__box\">\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                className=\"todo__edit__text\"\r\n                type=\"text\"\r\n                value={editText}\r\n                onChange={onChange}\r\n                placeholder=\"내용 입력\"\r\n                autoFocus\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"todo__edit__ok\"\r\n                type=\"submit\"\r\n                value=\"&#xf044;\"\r\n              />\r\n              <button className=\"todo__edit__no\" onClick={onClickEdit}>\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"todo__box\">\r\n            {todo[index].complete ? (\r\n              <>\r\n                <p className=\"textItem complete\">{textItem}</p>\r\n                <button className=\"completeBt cancel\" onClick={onClickComplete}>\r\n                  <i className=\"fas fa-check\"></i>\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p className=\"textItem\">{textItem}</p>\r\n                <button className=\"completeBt\" onClick={onClickComplete}>\r\n                  <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button className=\"todo__edit\" onClick={onClickEdit}>\r\n                  <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n              </>\r\n            )}\r\n            <button className=\"todo__delete\" onClick={onClickDelete}>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayListItem;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DisplayListItem from \"../components/DisplayListItem\";\r\nimport * as actions from \"../store/actions/todo\";\r\nimport \"./DisplayList.css\";\r\n\r\nconst DisplayList = () => {\r\n  const dispatch = useDispatch();\r\n  const { todo } = useSelector((store) => store.todo);\r\n\r\n  const onClickAll = () => {\r\n    dispatch(actions.visibleAll());\r\n  };\r\n  const onClickActive = () => {\r\n    dispatch(actions.visibleActive());\r\n  };\r\n  const onClickCompleted = () => {\r\n    dispatch(actions.visibleCompleted());\r\n  };\r\n  const onClickClearCompleted = () => {\r\n    dispatch(actions.clearCompleted());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todo.map((item, index) => (\r\n        <DisplayListItem\r\n          key={item.text + index}\r\n          textItem={item.text}\r\n          index={index}\r\n        />\r\n      ))}\r\n      {todo.length > 0 ? (\r\n        <div className=\"todo__visible\">\r\n          <button onClick={onClickAll}>All</button>\r\n          <button onClick={onClickActive}>Active</button>\r\n          <button onClick={onClickCompleted}>Completed</button>\r\n          <p onClick={onClickClearCompleted}>Clear completed</p>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayList;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport AddList from \"./components/AddList\";\nimport DisplayList from \"./components/DisplayList\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <AddList />\n      <DisplayList />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport todo from \"./todo\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todo,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/types\";\r\n\r\nexport default (state, action) => {\r\n  if (state === undefined) {\r\n    state = {\r\n      todo: [],\r\n    };\r\n  }\r\n\r\n  let newState = {};\r\n  let newTodo = [];\r\n  let i = 0;\r\n  switch (action.type) {\r\n    case types.ADD_LIST:\r\n      newTodo = [{ text: action.text, complete: false }, ...state.todo];\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.DELETE_LIST:\r\n      while (i < state.todo.length) {\r\n        if (i !== action.id) {\r\n          newTodo = [...newTodo, state.todo[i]];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.EDIT_LIST:\r\n      while (i < state.todo.length) {\r\n        if (i !== action.id) {\r\n          newTodo = [...newTodo, state.todo[i]];\r\n        } else {\r\n          newTodo = [...newTodo, { text: action.editText, complete: false }];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.COMPLETE_LIST:\r\n      while (i < state.todo.length) {\r\n        if (i !== action.id) {\r\n          newTodo = [...newTodo, state.todo[i]];\r\n        } else {\r\n          newTodo = [\r\n            ...newTodo,\r\n            { text: state.todo[i].text, complete: !state.todo[i].complete },\r\n          ];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.VISIBLE_ALL:\r\n      while (i < state.todo.length) {\r\n        newTodo = [\r\n          ...newTodo,\r\n          {\r\n            text: state.todo[i].text,\r\n            complete: state.todo[i].complete,\r\n            invisible: \"\",\r\n          },\r\n        ];\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.VISIBLE_ACTIVE:\r\n      while (i < state.todo.length) {\r\n        if (state.todo[i].complete === false) {\r\n          newTodo = [\r\n            ...newTodo,\r\n            {\r\n              text: state.todo[i].text,\r\n              complete: state.todo[i].complete,\r\n              invisible: \"\",\r\n            },\r\n          ];\r\n        } else {\r\n          newTodo = [\r\n            ...newTodo,\r\n            {\r\n              text: state.todo[i].text,\r\n              complete: state.todo[i].complete,\r\n              invisible: \"invisible\",\r\n            },\r\n          ];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.VISIBLE_COMPLETED:\r\n      while (i < state.todo.length) {\r\n        if (state.todo[i].complete === false) {\r\n          newTodo = [\r\n            ...newTodo,\r\n            {\r\n              text: state.todo[i].text,\r\n              complete: state.todo[i].complete,\r\n              invisible: \"invisible\",\r\n            },\r\n          ];\r\n        } else {\r\n          newTodo = [\r\n            ...newTodo,\r\n            {\r\n              text: state.todo[i].text,\r\n              complete: state.todo[i].complete,\r\n              invisible: \"\",\r\n            },\r\n          ];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    case types.CLEAR_COMPLETED:\r\n      while (i < state.todo.length) {\r\n        if (state.todo[i].complete === false) {\r\n          newTodo = [...newTodo, state.todo[i]];\r\n        }\r\n        i = i + 1;\r\n      }\r\n      newState = { ...state, todo: newTodo };\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import PromiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport Reducer from \"./reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  PromiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(\r\n  Reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nstore.subscribe(render);\nrender();\n"],"sourceRoot":""}